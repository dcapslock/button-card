name: CI

on:
  pull_request:
    branches:
      - '*'

env:
  NODE_VERSION: '24.x'
  PYTHON_VERSION: '3.13'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ env.NODE_VERSION }}
            ${{ runner.OS }}-
      - name: Install yarn for ACT (local testing)
        if: ${{ env.ACT }}
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint the code
        run: npm run lint --if-present
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ env.NODE_VERSION }}
            ${{ runner.OS }}-
      - name: Install yarn for ACT (local testing)
        if: ${{ env.ACT }}
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build the project
        run: npm run build --if-present

  mkdocs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: docs/requirements.txt
      - name: Install dependencies
        run: pip install -r docs/requirements.txt
      - name: Build with MkDocs strict
        run: |
          cd docs
          mkdocs build --strict
